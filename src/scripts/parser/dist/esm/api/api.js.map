{"version":3,"file":"api.js","names":["api","getJSONRequest","resourceKey","headers","request","URL","url","getParams","URLSearchParams","toString","window","response","fetch","data","json","status","error","Error","http","require","https","agent","protocol","config","hostname","port","path","pathname","method","Promise","resolve","reject","get","res","chunks","on","chunk","statusCode","JSON","parse"],"sources":["../../../src/api/api.ts"],"sourcesContent":["const api = {\n  getJSONRequest: (resourceKey: string, headers?: {}): Promise<IAPIResponse> =>\n    request(\n      new URL(\n        `https://cloud.51degrees.com/api/v4/${resourceKey}.json?cloud.client.product=ua-parser`,\n      ),\n      headers,\n    ),\n};\n\nconst request = async (url: URL, headers?: {}): Promise<IAPIResponse> => {\n  const getParams = \"&\" + new URLSearchParams(headers).toString();\n  if (typeof window !== \"undefined\") {\n    try {\n      const response = await fetch(url + getParams);\n      const data = await response.json();\n      return {\n        status: response.status,\n        response: data,\n      };\n    } catch (error) {\n      throw new Error(`Request failed: ${error}`);\n    }\n  } else {\n    const http = require(\"http\");\n    const https = require(\"https\");\n    const agent = url.protocol === \"http:\" ? http : https;\n    const config = {\n      hostname: url.hostname,\n      port: url.port,\n      path: url.pathname + getParams,\n      method: \"GET\",\n    };\n    return new Promise<IAPIResponse>((resolve, reject) => {\n      agent\n        .get(config, (res) => {\n          let chunks = \"\";\n          res.on(\"data\", (chunk) => {\n            chunks += chunk;\n          });\n          res.on(\"end\", () => {\n            resolve({\n              status: res.statusCode,\n              response: JSON.parse(chunks),\n            });\n          });\n        })\n        .on(\"error\", (error) => {\n          reject(new Error(`Request failed: ${error}`));\n        });\n    });\n  }\n};\n\nexport interface IAPIResponse {\n  status: number;\n  response: TApiResponseData;\n}\n\nexport type TApiResponseData = {\n  [key: string]: any;\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG;EACVC,cAAc,EAAE,CAACC,WAAmB,EAAEC,OAAY,KAChDC,OAAO,CACL,IAAIC,GAAG,CACJ,sCAAqCH,WAAY,sCAAqC,CACxF,EACDC,OAAO;AAEb,CAAC;AAED,MAAMC,OAAO,GAAG,OAAOE,GAAQ,EAAEH,OAAY,KAA4B;EACvE,MAAMI,SAAS,GAAG,GAAG,GAAG,IAAIC,eAAe,CAACL,OAAO,CAAC,CAACM,QAAQ,EAAE;EAC/D,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,GAAGC,SAAS,CAAC;MAC7C,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,OAAO;QACLC,MAAM,EAAEJ,QAAQ,CAACI,MAAM;QACvBJ,QAAQ,EAAEE;MACZ,CAAC;IACH,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,mBAAkBD,KAAM,EAAC,CAAC;IAC7C;EACF,CAAC,MAAM;IACL,MAAME,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;IAC5B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;IAC9B,MAAME,KAAK,GAAGf,GAAG,CAACgB,QAAQ,KAAK,OAAO,GAAGJ,IAAI,GAAGE,KAAK;IACrD,MAAMG,MAAM,GAAG;MACbC,QAAQ,EAAElB,GAAG,CAACkB,QAAQ;MACtBC,IAAI,EAAEnB,GAAG,CAACmB,IAAI;MACdC,IAAI,EAAEpB,GAAG,CAACqB,QAAQ,GAAGpB,SAAS;MAC9BqB,MAAM,EAAE;IACV,CAAC;IACD,OAAO,IAAIC,OAAO,CAAe,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpDV,KAAK,CACFW,GAAG,CAACT,MAAM,EAAGU,GAAG,IAAK;QACpB,IAAIC,MAAM,GAAG,EAAE;QACfD,GAAG,CAACE,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;UACxBF,MAAM,IAAIE,KAAK;QACjB,CAAC,CAAC;QACFH,GAAG,CAACE,EAAE,CAAC,KAAK,EAAE,MAAM;UAClBL,OAAO,CAAC;YACNf,MAAM,EAAEkB,GAAG,CAACI,UAAU;YACtB1B,QAAQ,EAAE2B,IAAI,CAACC,KAAK,CAACL,MAAM;UAC7B,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC,CACDC,EAAE,CAAC,OAAO,EAAGnB,KAAK,IAAK;QACtBe,MAAM,CAAC,IAAId,KAAK,CAAE,mBAAkBD,KAAM,EAAC,CAAC,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;AACF,CAAC;AAWD,eAAehB,GAAG"}