{"version":3,"file":"api.js","names":["api","getJSONRequest","resourceKey","headers","request","URL","url","getParams","URLSearchParams","toString","window","fetch","response","json","data","status","Error","http","require","https","agent","protocol","config","hostname","port","path","pathname","method","Promise","resolve","reject","get","res","chunks","on","chunk","statusCode","JSON","parse","error"],"sources":["../../../src/api/api.ts"],"sourcesContent":["const api = {\n  getJSONRequest: (resourceKey: string, headers?: {}): Promise<IAPIResponse> =>\n    request(\n      new URL(\n        `https://cloud.51degrees.com/api/v4/${resourceKey}.json?cloud.client.product=ua-parser`,\n      ),\n      headers,\n    ),\n};\n\nconst request = async (url: URL, headers?: {}): Promise<IAPIResponse> => {\n  const getParams = \"&\" + new URLSearchParams(headers).toString();\n  if (typeof window !== \"undefined\") {\n    try {\n      const response = await fetch(url + getParams);\n      const data = await response.json();\n      return {\n        status: response.status,\n        response: data,\n      };\n    } catch (error) {\n      throw new Error(`Request failed: ${error}`);\n    }\n  } else {\n    const http = require(\"http\");\n    const https = require(\"https\");\n    const agent = url.protocol === \"http:\" ? http : https;\n    const config = {\n      hostname: url.hostname,\n      port: url.port,\n      path: url.pathname + getParams,\n      method: \"GET\",\n    };\n    return new Promise<IAPIResponse>((resolve, reject) => {\n      agent\n        .get(config, (res) => {\n          let chunks = \"\";\n          res.on(\"data\", (chunk) => {\n            chunks += chunk;\n          });\n          res.on(\"end\", () => {\n            resolve({\n              status: res.statusCode,\n              response: JSON.parse(chunks),\n            });\n          });\n        })\n        .on(\"error\", (error) => {\n          reject(new Error(`Request failed: ${error}`));\n        });\n    });\n  }\n};\n\nexport interface IAPIResponse {\n  status: number;\n  response: TApiResponseData;\n}\n\nexport type TApiResponseData = {\n  [key: string]: any;\n};\n\nexport default api;\n"],"mappings":";;;;;;;+CACA;AAAA;AAAA;AADA,IAAMA,GAAG,GAAG;EACVC,cAAc,EAAE,wBAACC,WAAmB,EAAEC,OAAY;IAAA,OAChDC,OAAO,CACL,IAAIC,GAAG,8CACiCH,WAAW,0CAClD,EACDC,OAAO,CACR;EAAA;AACL,CAAC;AAED,IAAMC,OAAO;EAAA,sEAAG,iBAAOE,GAAQ,EAAEH,OAAY;IAAA;IAAA;MAAA;QAAA;UACrCI,SAAS,GAAG,GAAG,GAAG,IAAIC,eAAe,CAACL,OAAO,CAAC,CAACM,QAAQ,EAAE;UAAA,MAC3D,OAAOC,MAAM,KAAK,WAAW;YAAA;YAAA;UAAA;UAAA;UAAA;UAAA,OAENC,KAAK,CAACL,GAAG,GAAGC,SAAS,CAAC;QAAA;UAAvCK,QAAQ;UAAA;UAAA,OACKA,QAAQ,CAACC,IAAI,EAAE;QAAA;UAA5BC,IAAI;UAAA,iCACH;YACLC,MAAM,EAAEH,QAAQ,CAACG,MAAM;YACvBH,QAAQ,EAAEE;UACZ,CAAC;QAAA;UAAA;UAAA;UAAA,MAEK,IAAIE,KAAK,wCAA4B;QAAA;UAAA;UAAA;QAAA;UAGvCC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;UACtBC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;UACxBE,KAAK,GAAGd,GAAG,CAACe,QAAQ,KAAK,OAAO,GAAGJ,IAAI,GAAGE,KAAK;UAC/CG,MAAM,GAAG;YACbC,QAAQ,EAAEjB,GAAG,CAACiB,QAAQ;YACtBC,IAAI,EAAElB,GAAG,CAACkB,IAAI;YACdC,IAAI,EAAEnB,GAAG,CAACoB,QAAQ,GAAGnB,SAAS;YAC9BoB,MAAM,EAAE;UACV,CAAC;UAAA,iCACM,IAAIC,OAAO,CAAe,UAACC,OAAO,EAAEC,MAAM,EAAK;YACpDV,KAAK,CACFW,GAAG,CAACT,MAAM,EAAE,UAACU,GAAG,EAAK;cACpB,IAAIC,MAAM,GAAG,EAAE;cACfD,GAAG,CAACE,EAAE,CAAC,MAAM,EAAE,UAACC,KAAK,EAAK;gBACxBF,MAAM,IAAIE,KAAK;cACjB,CAAC,CAAC;cACFH,GAAG,CAACE,EAAE,CAAC,KAAK,EAAE,YAAM;gBAClBL,OAAO,CAAC;kBACNd,MAAM,EAAEiB,GAAG,CAACI,UAAU;kBACtBxB,QAAQ,EAAEyB,IAAI,CAACC,KAAK,CAACL,MAAM;gBAC7B,CAAC,CAAC;cACJ,CAAC,CAAC;YACJ,CAAC,CAAC,CACDC,EAAE,CAAC,OAAO,EAAE,UAACK,KAAK,EAAK;cACtBT,MAAM,CAAC,IAAId,KAAK,2BAAoBuB,KAAK,EAAG,CAAC;YAC/C,CAAC,CAAC;UACN,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEL;EAAA,gBA1CKnC,OAAO;IAAA;EAAA;AAAA,GA0CZ;AAAC,eAWaJ,GAAG;AAAA"}