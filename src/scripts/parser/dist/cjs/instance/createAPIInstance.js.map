{"version":3,"file":"createAPIInstance.js","names":["createAPIInstance","key","headers","api","getJSONRequest","status","response","mappedToLegacy","extendWithLegacyProps","Proxy","RESULT_PROXY_HANDLING","Error","errors","at"],"sources":["../../../src/instance/createAPIInstance.ts"],"sourcesContent":["import api from \"../api\";\r\nimport RESULT_PROXY_HANDLING from \"../proxies/resultProxy\";\r\nimport { TApiResponseData } from \"../api/api\";\r\nimport extendWithLegacyProps from \"../utils/extendWithLegacyProps\";\r\n\r\nconst createAPIInstance = async (\r\n  key: string,\r\n  headers?: {},\r\n): Promise<TApiResponseData> => {\r\n  try {\r\n    const { status, response } = await api.getJSONRequest(\r\n      key,\r\n      headers,\r\n    );\r\n    if (status === 200) {\r\n      const mappedToLegacy =\r\n        extendWithLegacyProps(response);\r\n      return new Proxy(\r\n        mappedToLegacy,\r\n        RESULT_PROXY_HANDLING,\r\n      );\r\n    } else {\r\n      throw new Error(response.errors.at(0));\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\nexport default createAPIInstance;\r\n"],"mappings":";;;;;;;AAAA;AACA;AAEA;AAAmE;AAAA,+CAFnE;AAAA;AAAA;AAIA,IAAMA,iBAAiB;EAAA,sEAAG,iBACxBC,GAAW,EACXC,OAAY;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,OAGyBC,eAAG,CAACC,cAAc,CACnDH,GAAG,EACHC,OAAO,CACR;QAAA;UAAA;UAHOG,MAAM,0BAANA,MAAM;UAAEC,QAAQ,0BAARA,QAAQ;UAAA,MAIpBD,MAAM,KAAK,GAAG;YAAA;YAAA;UAAA;UACVE,cAAc,GAClB,IAAAC,iCAAqB,EAACF,QAAQ,CAAC;UAAA,iCAC1B,IAAIG,KAAK,CACdF,cAAc,EACdG,uBAAqB,CACtB;QAAA;UAAA,MAEK,IAAIC,KAAK,CAACL,QAAQ,CAACM,MAAM,CAACC,EAAE,CAAC,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAK3C;EAAA,gBAtBKb,iBAAiB;IAAA;EAAA;AAAA,GAsBtB;AAAC,eACaA,iBAAiB;AAAA"}