{"version":3,"file":"resultProxy.js","names":["DEPRECATED_METHODS","RESULT_PROXY_HANDLING","get","target","prop","includes","Error","Reflect"],"sources":["../../../src/proxies/resultProxy.ts"],"sourcesContent":["import { TApiResponseData } from \"../api/api\";\r\n\r\nexport const DEPRECATED_METHODS = [\r\n  \"getCPU\",\r\n  \"getResult\",\r\n  \"getBrowser\",\r\n  \"getDevice\",\r\n  \"getEngine\",\r\n  \"getOS\",\r\n  \"getUA\",\r\n  \"setUA\",\r\n];\r\n\r\nconst RESULT_PROXY_HANDLING = {\r\n  get: (target: TApiResponseData, prop: string) => {\r\n    // TODO: move this error message to the ECustomError, and replace $prop dynamically\r\n    if (DEPRECATED_METHODS.includes(prop))\r\n      throw new Error(\r\n        `Method ${prop} deprecated. Use result object properties directly. result.device contains new 51Degrees data points.`,\r\n      );\r\n    return Reflect.get(target, prop);\r\n  },\r\n};\r\n\r\n// Refactor\r\n// export const DEPRECATED_METHODS = new Set([\r\n//   \"getCPU\",\r\n//   \"getResult\",\r\n//   \"getBrowser\",\r\n//   \"getDevice\",\r\n//   \"getEngine\",\r\n//   \"getOS\",\r\n//   \"getUA\",\r\n//   \"setUA\",\r\n// ]);\r\n//\r\n// const RESULT_PROXY_HANDLING = {\r\n//   get: (target: TApiResponseData, prop: string) => {\r\n//     if (DEPRECATED_METHODS.has(prop))\r\n//       throw new Error(\r\n//           ECustomError.METHOD_DEPRECATED.replace('$prop', prop),\r\n//       );\r\n//     return Reflect.get(target, prop);\r\n//   },\r\n// };\r\n\r\nexport default RESULT_PROXY_HANDLING;\r\n"],"mappings":";;;;;;AAEO,IAAMA,kBAAkB,GAAG,CAChC,QAAQ,EACR,WAAW,EACX,YAAY,EACZ,WAAW,EACX,WAAW,EACX,OAAO,EACP,OAAO,EACP,OAAO,CACR;AAAC;AAEF,IAAMC,qBAAqB,GAAG;EAC5BC,GAAG,EAAE,aAACC,MAAwB,EAAEC,IAAY,EAAK;IAC/C;IACA,IAAIJ,kBAAkB,CAACK,QAAQ,CAACD,IAAI,CAAC,EACnC,MAAM,IAAIE,KAAK,kBACHF,IAAI,2GACf;IACH,OAAOG,OAAO,CAACL,GAAG,CAACC,MAAM,EAAEC,IAAI,CAAC;EAClC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,eAEeH,qBAAqB;AAAA"}